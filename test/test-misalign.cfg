process TEST = {
    
    // -- Load default module/services configurations -- //
    
    // Message logger service
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.cout =  {      
        untracked string threshold = "INFO"    
        untracked PSet default = { untracked int32 limit = 10000000 }  
    }
    #replace MessageLogger.debugModules = { "*" }

    # service = Tracer {}
    
    
    // Ideal geometry producer
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    // Empty event source
    source = EmptySource { }
    untracked PSet maxEvents = { untracked int32 input = 1 }
    
    // Database output service
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "sqlite_file:TrackerGeometry.db"  
    # Writing to oracle needs the following shell variable setting (in zsh):
    # export CORAL_AUTH_PATH=/afs/cern.ch/cms/DB/conddb
    # replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_ALIGNMENT" # devel. DB
    replace CondDBCommon.DBParameters.messageLevel = 2
    service = PoolDBOutputService {
        using CondDBCommon
	untracked string timetype = "runnumber"
        VPSet toPut = {
#            { string record = "TrackerAlignmentRcd" string tag = "TrackerIdealGeometry200" },
#            { string record = "TrackerAlignmentErrorRcd" string tag = "TrackerIdealGeometryErrors200" }
            { string record = "TrackerAlignmentRcd" string tag = "Tracker10pbScenario200_mc" },
            { string record = "TrackerAlignmentErrorRcd" string tag = "Tracker10pbScenarioErrors200_mc" }
#            { string record = "TrackerAlignmentRcd" string tag = "TrackerSurveyLASCosmicsScenario200_mc" },
#            { string record = "TrackerAlignmentErrorRcd" string tag = "TrackerSurveyLASCosmicsScenarioErrors200_mc" }
#            { string record = "TrackerAlignmentRcd" string tag = "TrackerSurveyLASOnlyScenario200_mc" },
#            { string record = "TrackerAlignmentErrorRcd" string tag = "TrackerSurveyLASOnlyScenarioErrors200_mc" }
        }
    }
    
    
    // Misalignment example scenario producer
#    include "Alignment/TrackerAlignment/data/ExampleScenario.cff"
#    include "Alignment/TrackerAlignment/data/NoMovementsScenario.cff"
#    include "Alignment/TrackerAlignment/data/Tracker1000pbScenario.cff"
#    include "Alignment/TrackerAlignment/data/Tracker100pbScenario.cff"
    include "Alignment/TrackerAlignment/data/Tracker10pbScenario.cff"
#    include "Alignment/TrackerAlignment/data/SurveyLASCosmicsScenario.cff"
#    include "Alignment/TrackerAlignment/data/SurveyLASOnlyScenario.cff"

    replace MisalignedTracker.saveToDbase = true #false
    
    // Test module
    module prod =  TestAnalyzer { untracked string fileName = "misaligned.root" }
    
    path p1 = {  prod }

}
