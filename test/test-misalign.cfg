process TEST = {
    
    // -- Load default module/services configurations -- //
    
    // Message logger service
    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.cout.default.limit = 100000
    
    // Ideal geometry producer
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    
    // Empty event source
    source = EmptySource { untracked int32 maxEvents = 1 }
    
    // Database output service
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "sqlite_file:Alignments.db"    
    replace CondDBCommon.catalog = "file:conddbcatalog.xml"
    // Switch to ORACLE
    #replace CondDBCommon.connect = "oracle://devdb10/CMS_COND_ALIGNMENT"
    #replace CondDBCommon.catalog = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL"
    service = PoolDBOutputService {
        using CondDBCommon
        VPSet toPut = {
            { string record = "TrackerAlignmentRcd" string tag = "TrackerLongTermScenario" },
            { string record = "TrackerAlignmentErrorRcd"
                string tag = "TrackerLongTermScenarioErrors" }
        }
    }
    
    
    // Misalignment example scenario producer
    #include "Alignment/TrackerAlignment/data/NoMovementsScenario.cff"
    #include "Alignment/TrackerAlignment/data/ShortTermScenario.cff"
    include "Alignment/TrackerAlignment/data/LongTermScenario.cff"
    replace MisalignedTracker.saveToDbase = true
    
    // Test module
    module prod =  TestAnalyzer { untracked string fileName = "misaligned.root" }
    
    path p1 = { prod }
    
}
